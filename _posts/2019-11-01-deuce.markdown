---
layout: paper-summary
title:  "DEUCE: Write-Efficient Encryption for Non-Volatile Memories"
date:   2019-11-01 11:34:00 -0500
categories: paper
paper_title: "DEUCE: Write-Efficient Encryption for Non-Volatile Memories"
paper_link: https://dl.acm.org/citation.cfm?id=2694387
paper_keyword: NVM; Counter Mode Encryption
paper_year: ASPLOS 2015
rw_set: 
htm_cd: 
htm_cr: 
version_mgmt: 
---

This paper proposes DEUCE, a framework that provides cache line encryption capability to NVM via counter mode encryption.
The paper identifies that in a standard counter mode encryption scheme, approximately half of the bits will be updated,
resulting in more power consumption and wear. The problem can be solved if only updated data is encrypted, which affects
a smaller set of bits per cache line. In addition, the paper also identifies that when performing writes, some bits are 
flipped more frequently than others, resulting in uneven wear within a cache line. Such uneven wear cannot be allievated by
regular wear leveling schemes, since these scheme operate on cache line granularity (or larger). If a single bit in the 
cache line wears out, the entire storage unit for wear leveling will need to be marked as "bad".

DEUCE is based on counter mode encryption, which protects the content stored on the NVM from being leaked to a third 
party. Counter mode encryption works as follows. At initialization time, every cache line is assigned a counter value.
These counter values are stored in a separate region on the NVM, and must be kept consistent with the data area. When
a line is evicted back to the NVM, the memory controller encrypts the cache line by first generating a one-time pad (OTP)
of cache line size, and then XOR'ing the content of the line with the OTP. The generation of OPT takes the address of 
the line and the line's counter value, and a secret key which is assumed to be stored securely, which are then sent to 
an AES encoder to generate the OTP. The property of AES guarantees that it is almost impossible to guess the value 
of the OTP without knowing the secret key, which makes the NVM device secure. Counters are incremented when they are 
used to generate the OTP, making sure that for each write, the value of the OTP is almost always different. 