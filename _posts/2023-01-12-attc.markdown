---
layout: paper-summary
title:  "ATTC (@C): Addressable-TLB based Translation Coherence"
date:   2023-01-12 05:00:00 -0500
categories: paper
paper_title: "ATTC (@C): Addressable-TLB based Translation Coherence"
paper_link: https://dl.acm.org/doi/10.1145/3410463.3414653
paper_keyword: ATTC; TLB Shootdown; Virtualization
paper_year: PACT 2020
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

**Comments:**

1. Modern TLB entries have two disambiguation fields. One is VMID which distinguishes between VMs and the 
VMM, which the paper discusses. The other, however, is PCID which distinguishes between different processes 
within the same VM instance or within the VMM/host OS, which the paper neglects. How does the PCID field
affect the design of ATTC?

2. The paper did not discuss how are the tables (ATLB and INVTBL) populated. Are they populated automatically by 
the MMU page walker on the completion of page walks? Are they populated by the guest or host OS (unlikely)?
It seems that the paper adds the ATLB as a level 3 in-memory TLB. If this assumption is true, then the ATLB
should be populated by the page walker.

3. If the cache block containing the ATLB entry is evicted from the private hierarchy (or from the LLC, depending
on whether the coherence protocol has silent L2 eviction), then cache coherence will no longer be able to reach the 
private hierarchy potentially holding the TLB entry. How did ATTC deal with this scenario? 
One possible solution is to mark cache blocks containing ATLB entries in the L2 cache and then invalidate 
TLN entries as well when a marked block is evicted. However, this approach would make the L2 essentially
inclusive of the TLB, which may incur unexpected performance issues. Besides, it introduces extra tagging per 
cache block.

This paper proposes ATTC, a hardware TLB coherence scheme that eliminates the overhead of software TLB shootdown
in a virtualized environment. ATTC is built upon cache coherence and it reuses the existing cache coherence network
to perform TLB coherence on hardware. Compared with prior schemes that also rely on cache coherence, ATTC handles 
virtualized environments better and incurs only minimum hardware additions on the TLB structure.
