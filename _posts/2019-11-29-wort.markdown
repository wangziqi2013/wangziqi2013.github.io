---
layout: paper-summary
title:  "WORT: Write Optimal Radix Tree for Persistent Memory Storage Systems"
date:   2019-11-29 20:23:00 -0500
categories: paper
paper_title: "WORT: Write Optimal Radix Tree for Persistent Memory Storage Systems"
paper_link: https://www.usenix.org/conference/fast17/technical-sessions/presentation/lee-se-kwon
paper_keyword: ART; Radix Tree; WORT
paper_year: FAST 2017
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper proposes WORT, an algorithm for implementing radix tree and its variant, Adaptive Radix Tree (ART), on 
persistent memory. The paper identifies that it is challenging to make B+Trees persistent, since B+Tree maintains
keys within a node in sorted order for efficient search. In order to update a node, either we no longer require such
sorted property of nodes, and update nodes in append-only manner, or we add an extra level of indirection, and relies on 
atomic update of the indirection field to insert keys atomically while maintaining sorted order. Both methods have problems,
as append-only updates hurts search performance for large nodes due to loss of sorted key property, while the indirection
level incurs more memory accesses which results in longer critical path. In addition, structural modification operations 
(SMO) on B+Trees cannot be performed atomically with regard to NVM. Either we use redo or undo logging to ensure post-crash
recovery always restoring the tree to a consistent state, which incurs excessive writes, or we design each atomic step of
SMO in such a way that the tree is always transformed between consistent states. The latter scheme complicates the tree
update protocol and may introduce subtle bugs. 