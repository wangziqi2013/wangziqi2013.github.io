---
layout: paper-summary
title:  "Decoupled Compressed Cache: Exploiting Spatial Locality for Energy-Optimized Compressed Caching"
date:   2020-06-12 23:00:00 -0500
categories: paper
paper_title: "Decoupled Compressed Cache: Exploiting Spatial Locality for Energy-Optimized Compressed Caching"
paper_link: https://dl.acm.org/doi/10.1145/2540708.2540715
paper_keyword: Compression; Cache Tags; DCC
paper_year: MICRO 2013
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper proposes Decoupled Compressed Cache (DCC), a tag mapping framework for compressed LLC featuring low area cost
and high space utilization. The paper points out that previous segmented tag mapping schemes have three major issues. The 
first is internal fragmentation, which happens when compressed blocks could only be aligned to a certain segment boundary, 
as in segmented cache designs. Blocks could not take advantage of every byte of the physical segment allocated to it, 
wasting the rest storage of the segment. 
The second issue is external fragmentation, leading to suboptimal utilization of the segments if compressed blocks are
required to be stored in consecutive range of blocks. Even if the total number of bytes in free segments are sufficient,
these segments may not form a consecutive range that is large enough to hold the block, requiring compaction of existing 
blocks. On modern cache architecture, segments are usually implemented as data array banks. Compaction a set would require 
reading and writing all the banks, causing extra power consumption and head dissipation.
The last issue is tagging overhead. In conventional segmented cache schemes, the maximum number of compressed blocks
that can be stored within a set is bounded by the number of tags per-set. Over-provisioning of tags are required if 
more compressed blocks are expected to be stored in the set. More tags per-set, however, have a nagative impact on
power and access latency, since the larger the tag array, the more power and cycles it takes to access the array on
every access.

This paper takes advantage of two observations. First, LLC still preserves the spatial locality of access. Given a super
block whose size is four regular 64 byte blocks and is aligned to four-block boundary, in most cases, more than 1 regular
blocks within the super block are cached by the LLC. The second observation is that external fragmentation can be easily
solved by making the segment array fully-associative. As a result, a compressed block does not have to be stored in a 
consecutive range of segments. Instead, the block can reside in several non-continuous segments, which will be concatenated 
together by the block read circult on cache accesses.


