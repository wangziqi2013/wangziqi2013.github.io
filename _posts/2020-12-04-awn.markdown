---
layout: paper-summary
title:  "Restrictive Compression Techniques to Increase Level 1 Cache Capacity"
date:   2020-12-04 19:45:00 -0500
categories: paper
paper_title: "Restrictive Compression Techniques to Increase Level 1 Cache Capacity"
paper_link: https://ieeexplore.ieee.org/document/1524171/
paper_keyword: Compression; L1 Compression
paper_year: ICCD 2005
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper proposes a restrictive cache compression scheme for improving L1 cache effective capacity.
Applying compression to L1 caches can help further improve performance and reduce energy consumption, since
more data blocks are cached by the L1, and less requests are sent to lower levels L2.
The paper points out at the beginning, however, that conventional compression algorithms are not feasible for L1
cache compression, since they introduce a few cycle's latency during compression and decompression. Even though
the absolute number of cycles can be small, they are still significant relative to L1 cache's access latency,
which is typically only a few cycles.

The paper observes that, all previous compression schemes change the bit offset of words in the compressed line, in a 
way such that they must be explicitly computed, incurring more cycles. 
In order to design a compression algorithm for L1, individual words in the compressed line must be able to easily 
recovered with random access, such that they can be fed into the pipeline immediately after the compressed line 
is read out. The paper calls this property as "restrictive" as it narrows down the design space to only a few 
possibilities.

The L1 cache architecture is described as follows. Each physical cache line is over-provisioned with an extra tag,
which supports up to 2x compression ratio. The extended tag contains at least an address tag, MESI state tag, and 
LRU tag. Besides, each physical line also has one bit indicating whether compression is enabled for the slot. If
compression is enabled, the slot stores two lines compressed to half of the slot size, and each of the two tags 
describes a compressed line. Otherwise, compression is disabled on the slot, meaning that the slot stores an 
uncompressed line, and only one tag is active.

Compression is performed as follows. On inserting into the L1 cache, the compression circuit checks whether all bits in
the higher half of each word to be compressed equals the sign bit of the lower half. If true, the word is compressed to
half of its original size by eliminating higher bits. Otherwise, the word is uncompressable, which also renders the 
entire line uncompressable. 
The compression circuit is extremely simple: On the insertion data path, we add an array of 
comparators to check higher bits in parallel for all words, and then use a multiplexer to determine which version of 
data is output. The per-line bit is also set, if the line is compressable, and the slot is currently empty (if the
slot already contains a compressed line, then just fill it in the slot).
