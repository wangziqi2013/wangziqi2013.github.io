---
layout: paper-summary
title:  "iDO: Compiler-Directed Failure Atomicity for Non-Volatile Memory"
date:   2019-08-10 00:19:00 -0500
categories: paper
paper_title: "iDO: Compiler-Directed Failure Atomicity for Non-Volatile Memory"
paper_link: https://ieeexplore.ieee.org/document/8574546
paper_keyword: JUSTDO; iDO; Failure Atomicity; Idempotent Region
paper_year: MICRO 2018
rw_set: 
htm_cd: 
htm_cr: 
version_mgmt: 
---

This paper proposes iDO, a crash recovery scheme based on Non-Volatile Memory using idempotent regions. Classical crash
recovery schemes, such as undo logging, redo logging, and shadow mapping, incur too much overhead by maintaining a runtime
write set and persisting data into the NVM with heavy-weight barriers. A more recent proposal, Justdo Logging, abandons 
per-store logging and data-centric approach of recovery, and instead, relies on the re-execution of the Failure-Atomic
Section (FASE) to reproduce the state before the crash, and furthermore, restore the consistent system state by executing
the FASE till completion. Although Justdo logging may offer better performance because of less persistence barrier, it 
has two constraints which may hinder its practicability. First, Justdo logging assumes a non-volatile cache, which is not 
yet available on today's architecture. Even on future platforms where the cache can be made persistent or be backed 
by a battery, the feasibility of persistent cache is still questionable. 