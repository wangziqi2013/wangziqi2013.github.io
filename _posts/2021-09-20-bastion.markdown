---
layout: paper-summary
title:  "Scalable Architectural Support for Trusted Software"
date:   2021-09-20 18:04:00 -0500
categories: paper
paper_title: "Scalable Architectural Support for Trusted Software"
paper_link: https://ieeexplore.ieee.org/document/5416657
paper_keyword: Security; Enclave; Bastion
paper_year: HPCA 2010
rw_set:
htm_cd:
htm_cr:
version_mgmt:
--- 

This paper proposes Bastion, a secure computing architecture built into the CPU core that allows secure execution
of trusted hypervisors, software modules, and secure storage of data on external devices. 
The paper is motivated by the fact existing mechanisms for secure computing are neither comprehensive, nor efficient,
indicating that a single mechanism is not sufficient to protect all system components without incurring high
overhead. Bastion, on the other hand, provides a set of simple hardware interfaces for integrity verification, access 
control, and encryption/decryption, and relies on a trusted (and dynamically verified) hypervisor to protect 
both dynamic execution, data access, and external I/O of applications.

The paper begins with a discussion of the limitations of existing secure computing techniques. Virtual Machine Monitors
(VMMs) are a popular option, because it offers hardware-assisted isolation between kernels. This provides a great 
advantage over schemes that rely on the kernel to be not compromised, as the protected application can be 
executed on a separate VMM instance using its own trusted OS. VMMs, however, incurs great overhead as well, since 
switching to the protected application involves a world switch into another VMM instance.
The paper also lists limitations of other proposed designs. First, some of them lack scalability, since they 
need dedicated hardware resource per protected region, meaning that the number of protected regions is upper bounded
by the number of available hardware resources. 
Second, these proposals lack flexibility since they do not take software context into consideration (**I did not 
understand what does this mean in the paper**). 
Lastly, some proposals assume that the hardware will be physically intact, which are prone to hardware attacks,
such as using malicious bus agents to tap on the memory bus or actively corrupt data, or accessing the external
storage by physically mounting it on a non-secure host.
