---
layout: paper-summary
title:  "Line Distillation: Increasing Cache Capacity by Filtering Unused Words in Cache Lines"
date:   2020-07-02 09:44:00 -0500
categories: paper
paper_title: "Line Distillation: Increasing Cache Capacity by Filtering Unused Words in Cache Lines"
paper_link: https://dl.acm.org/doi/10.1109/HPCA.2007.346202
paper_keyword: Cache; LDIS; Line Distillation
paper_year: HPCA 2007
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

**Highlight:**

1. Improves associativity by partial caching

2. Use set dueling to make policy decisions on whether word level caching should be used. Although set dualing is not 
   specialized to LDIS, it is impressive how this mechanism can help.
   (i.e. If you are not sure how to make a policy decision, then try set dueling with duplicated tags conducting "dry
   runs" of the workload, and then compare the performance of different schemes based on the stats collected from each 
   tag set.)

**Lowlight:**

1. Some statements are self-conflicting. For example, in 

This paper proposes line distillation (LDIS), a technique for dynamically increasing cache associativity. 
This paper identifies that in most workloads, not all words in a cache block are accessed equally by the processor before 
the line is evicted from the cache. This motivates the design that cache lines are only partially evicted, and words 
that are likely to be reused in the near future be cached by a small word level store. Since only partial data is stored
per line, more lines can be "squeezed" into a physical slot, increasing effective associativity.
In addition, the paper also points out that the chances that unused words in a cache line be accessed later is highly
related to the position of the line in the LRU stack. For lines that are closer to the LRU position within a set,
it is less likely that unused words will be accessed later. This further justifies the design that only previously accessed
words in evicted lines are stored by the word level cache, while other words are simply discarded.


