---
layout: paper-summary
title:  "P-Inspect: Architectural Support for Programmable Non-Volatile Memory Frameworks"
date:   2020-12-12 09:33:00 -0500
categories: paper
paper_title: "P-Inspect: Architectural Support for Programmable Non-Volatile Memory Frameworks"
paper_link: https://www.microarch.org/micro53/papers/738300a509.pdf
paper_keyword: NVM; P-Inspect
paper_year: MICRO 2020
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper prposes P-Inspect, a hardware enhancement for supporting reachability-based programming on NVM applications.
Conventional, software-based reachbility test either incurs too much run-time cycle overhead, or requires tagging 
the entire address space. P-Inspect, as a hardware solution, achieves both efficiency and flexibility by moving 
high-frequency, easy-to-implement condition checks to hardware, while still having software implementing the majority
of the functionality.

P-Inspect assumes reachbility-based NVM programming model. In this model, data structures, which consist of individual 
objects, can be allocated both on DRAM and NVM, but only those in NVM can be preserved after a system crash or power 
loss. The goal of the programming model is that: (1) Initially, objects can be allocated on the DRAM for faster access,
but cannot be pointed to by another object in persistent memory; and (2) If an object is to be referenced by a 
persistent object, the object must be moved to the NVM for consistency.