---
layout: paper-summary
title:  "Bit-Plane Compression: Transforming Data for Better Compression in Many-Core Architectures"
date:   2020-09-03 22:19:00 -0500
categories: paper
paper_title: "Bit-Plane Compression: Transforming Data for Better Compression in Many-Core Architectures"
paper_link: https://dl.acm.org/doi/10.1109/ISCA.2016.37
paper_keyword: Bit-Plane Compression; Compression; GPGPU
paper_year: ISCA 2016
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

**Highlight:**

1. 

**Lowlight:**

1. The paper is poorly organized. There is neither overall picture of what the algorithm attempts to achieve, nor
   a detailed description of how compression is performed.
   I read seven pages, and most of them are just related work (which I already know) and observations by running 
   different workloads (not even interesting, all expected).

2. The paper also failed to mention that this algorithm is only applicable to 128B blocks, since there has to be 32
   words to form 32-bit code words after bit-plane rotation.
   Although the paper did mention that this algorithm is targeted at GPGPU which may have larger cache blocks
   due to the regular access pattern.

3. The paper also does not summarize what kind of inefficiencies in previous approaches it solves. At least give
   a comparison with BDI like what I did in this paper summary.

This paper proposes Bit-Plane Compression, a data compression algorithm for better compression ratio. Conventional
compression algorithms, such as Base-Delta-Immediate (BDI), may take advantage of value locality of adjacent words
by subtracting the value from its neighbor. Since values are expected to be close to each other, these deltas are 
small, such that only a few bits is sufficient to store them, achieving the goal of compression that fewer bits are 
used to encode the same information.


