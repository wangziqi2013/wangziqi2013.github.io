---
layout: paper-summary
title:  "NV-Tree: Reducing Consistency Cost for NVM-based Single Level Systems"
date:   2019-12-01 22:42:00 -0500
categories: paper
paper_title: "NV-Tree: Reducing Consistency Cost for NVM-based Single Level Systems"
paper_link: https://www.usenix.org/conference/fast15/technical-sessions/presentation/yang
paper_keyword: NV-Tree; NVM; B+Tree
paper_year: FAST 2017
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper proposes NV-Tree, a B+Tree designed for byte-addressable non-volatile memory. Differing from previous proposals,
this paper is based on battery-backed NVDIMM, which flushes data in the DRAM back to SSD on a power failure using residual
power from on-chip batteries. The battery-backed NVDIMM features non-volatile data storage like SSD or PCM-based NVDIMM,
while having the bandwidth and latency of DRAM. The paper points out that previous designs, such as LCB+Tree and CDDS-Tree,
suffer from excessive cache line flushes and memory fences. LCB+Tree uses redo write-ahead logging for all update operations
to ensure failure atomicity. The log record is first written, followed by a flush, after which we update data in-place and 
then flush dirty data. The log entry is only removed after all dirty cache lines are flushed. In CDDS-Tree, updates are
performed directly in-place, by creating versions. In addition, to maintain sorted property of keys within a node, elements
are shifted when a new key is to be inserted into the node. This requires the programmer to insert one cache line flush
per element shift, resulting in high cache misses. 

