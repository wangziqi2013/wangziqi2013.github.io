---
layout: paper-summary
title:  "Mostly Order Preserving Dictionaries"
date:   2020-09-26 03:00:00 -0500
categories: paper
paper_title: "Mostly Order Preserving Dictionaries"
paper_link: https://ieeexplore.ieee.org/document/8731521
paper_keyword: Compression; Database Compression; MOP; Order-Preserving Dictionary
paper_year: ICDE 2019
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper proposes mostly order preserving dictionary (MOP), a database compression technique for fast dictionary encoding 
and mostly decoding-free range query. MOP is motived by order preserving dictionaries, which is one of the order preserving 
techniques that map large, repeated values to smaller code words, reducing the number of bits required to represent
the value. The mapping relation is stored as a seperate dictionary for further encoding or decoding. 

Before MOP, previous work has proposed order preserving dictionary designs to achieve both compression and decoding-free
query execution. An order preserving dictionary delivers the guarantee that the numeric order of encoded values is consistent
with the total ordering of unencoded values. This property optimizes range queries based on field values, since the query
does not require decoding the compressed field in order to select the correct tuples. In this case, the query engine rewrites
the condition using the encoded values whose range covers exactly what is requested by the original condition.

Full order preseving dictionaries are not always practical. There are two real-world restrictions that can hinder its 
adoption. The first is that order preserving dictionary requires knowing the entire data set, or at least the distribution
of the field values, before generating the dictionary. This poses a challenge for real-time data analytical systems, as 
they must digest information when they arrive, without too much buffering capability to gather information about the 
full data set. The second problem is that even if the full data set is available, buidling the dictionary involves 
scanning and generating an ordered set of possible values, which is resource consuming. 

MOP avoids the above two challenges by allowing unordered code word assignments to occur at the end of the code word value
domain, partially violating the ordered property that the order of code words must match those of the input value.
Such violation, however, only marginally affects query performance, as the query executor may run a several-pass scan
on the queried table, each only selecting tuples using part of the dictionary, and combine results later.

A MOP dictionary consists of multiple sections. Let the number be N, each the first (N - 1) sections contain order preserving 
codes, but the ordering between sections are not guaranteed. In other words, in each of the first (N - 1) sections,
the ordering of code words fully matches the ordering of the actual values they encode. 
In the last section, called the DIS section, however, there is zero ordering guarantee, and the ordering between code
words can be arbitrary. The sectioned design is a result of incremental dictionary generation. Since the direction 
generator can only see partial inputs at any stage of the execution, it can only make the best effort to assign code
words to input values in the current working section, leaving gaps for future insertions. When this becomes impossible,
the dictionary generator starts a new section, and use it as well as all previous sections as the current working 
section. The last section is treated as an "overflow" section, where values are simply inserted in FIFO order, being
assigned monotonically increasing code words.

The MOP dictionary is generated as follows. In the first stage, all worker threads cooperatively read a prefix of the 
input stream, and estimates the cardinality of the input based on the sampled results. Cardinality is estimated by
counting the number of distinct values in the samples. In the second stage, the cardinality estimation is reported 
to the generator, and the generator allocates the first section based on the reported number. 
