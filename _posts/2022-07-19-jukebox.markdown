---
layout: paper-summary
title:  "Lukewarm serverless functions: characterization and optimization"
date:   2022-07-19 01:40:00 -0500
categories: paper
paper_title: "Lukewarm serverless functions: characterization and optimization"
paper_link: https://dl.acm.org/doi/10.1145/3470496.3527390
paper_keyword: Serverless; Prefetching; Jukebox; Function Keep-Alive; Instruction Cache
paper_year: ISCA 2022
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper proposes Jukebox, an instruction cache prefetching mechanism designed to reduce instruction
cache misses for short-lived serverless functions. 
The paper is motivated by the three distinctive properties of serverless functions, which are not observed on
other types of cloud services.
First, serverless functions generally have short execution time, in the unit of milliseconds, and small
memory footprint, which is usually within a few hundreds of megabytes, due to the fact that most functions are
deployed for web services, and they only perform simple tasks such as HTML rendering.
Second, different serverless functions often co-reside on the same physical machine and share the hardware
resource. This is natural outcome in today's cloud computing paradigm as service providers adopt virtualization
technologies which make it possible to subscribe the same physical machine to many unrelated service instances.
Lastly, intervals between function invocations can be much longer than the function's lifetime.
This is especially true when function's lifetime is short.

The three observations, combined together, brings about an issue known that as cold start problem. When a function
is short and frequently invoked, the overhead of initializing and tearing down the function container 
cannot be well amortized over the function's execution period unlike the case of traditional long-running services.

