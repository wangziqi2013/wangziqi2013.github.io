---
layout: paper-summary
title:  "LB+-Trees: Optimizing Persistent Index Performance on 3DXPoint Memory"
date:   2020-09-27 03:50:00 -0500
categories: paper
paper_title: "LB+-Trees: Optimizing Persistent Index Performance on 3DXPoint Memory"
paper_link: https://dl.acm.org/doi/10.14778/3384345.3384355
paper_keyword: NVM; B+Tree; LB-Tree
paper_year: VLDB 2020
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper presents LB-Tree, or Line Write/Logless B+Tree, a NVM optimized B+Tree design for efficient updates.
Although not explicitly stated, the paper identifies a few inefficiencies in conventional in-memory B+Tree designs
when ported to the NVM, such as ordered nodes, the overhead of structural modifications, and maintaining consistent
node states.

The paper makes three critical observations that enable extra optimizations on NVM. First, it is observed that the 
performance of NVM writes of a cache line does not depend on the number of dirty bits in the cache line. Theoretically
speaking, NVM may adopt optimizations to minimize the number of flipping bits in each internal writes, to reduce the 
number of physical state changes. This optimization is not present in the current commercial product, most likely because
the NVM device encrypts data stored in the physical array, in which case a single bit change in the input line will
propagate to the remaining bits, offsetting the benefits of the optimization.
