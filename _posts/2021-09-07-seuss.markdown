---
layout: paper-summary
title:  "SEUSS: Skip Redundant Paths to Make Serverless Fast"
date:   2021-09-07 23:03:00 -0500
categories: paper
paper_title: "SEUSS: Skip Redundant Paths to Make Serverless Fast"
paper_link: https://dl.acm.org/doi/abs/10.1145/3342195.3392698
paper_keyword: Microservice; Serverless; Linux; Process Template
paper_year: EuroSys 2020
rw_set:
htm_cd:
htm_cr:
version_mgmt:
---

This paper proposes SEUSS, a serverless framework that optimizes the long cold-start latency of processes using 
memory snapshots of initialized processes as templates.
The paper is motivated by previous works that attempted to reduce cold-start latency of serverless processes 
by forking an existing process that has already been initialized. The paper argues that the applicability of these 
approaches are limited, as the support for forking existing processes together with the interpreter with all libraries
imported is heavily implementation dependent, and only a few interpreters can achieve that.
The paper addresses the issue by using an unikernel OS as the execution environment of serverless functions.
Process templates are hence saved by taking snapshots of the full memory and execution states of the OS without 
involving the interpreter.

Unikernels are operating system kernels that minimize the number of modules that is included in the runtime image.
Unikernels are typically tailored to the applications that will run on them, and it only contains the system 
services and stacks required by the application. 
In addition, unikernels only support a single address space, and therefore, it runs the best with only one process.
From a different perspective other than the conventional OS-application division, unikernels are just applications
linked with system software and device drivers that are able to execute both user-level and system-level tasks as 
a self-contained unit.
Unikernels are perfect candidate for providing isolation to microservices and serverless, as the kernel image is usually
small, and the time it takes for booting up a unikernel is usually within milliseconds due to its minimum
number of services.



