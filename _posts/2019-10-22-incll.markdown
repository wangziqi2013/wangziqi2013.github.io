---
layout: paper-summary
title:  "Fine-Grain Checkpointing With In-Cache-Line Logging"
date:   2019-10-22 11:47:00 -0500
categories: paper
paper_title: "Fine-Grain Checkpointing With In-Cache-Line Logging"
paper_link: https://dl.acm.org/citation.cfm?doid=3297858.3304046
paper_keyword: NVM, Undo Logging; Masstree
paper_year: ASPLOS 2019
rw_set: 
htm_cd: 
htm_cr: 
version_mgmt: 
---

This paper presents In-Cache Line Logging (InCLL), a novel technique for accelerating undo logging in certain non-volatile
data structures. InCLL is motivated by the fact that traditional undo-based logging has an important implication: the 
undo log entry must reach the persistent NVM before dirty data does, because otherwise, when the system crashes, all in-cache
data will be lost, and there would be no way to recover the system state to the before state using undo image. With today's
commercial hardware, the write ordering between the log entry and dirty data (which can reside in different cache lines) 
must be enforced using cache flush and memory fence instructions, which can be inefficient if log flushes are frequent.

Instead of precise undo logging, InCLL adopts an epoch-based checkpointing model, in which the data structure is checkpointed
for every 50ms. The interval between two consecutive checkpoints is called an "epoch", during which the data stucture works
normally as the volatile version. After a system crash, it is guaranteed that the state of the data structure can be 
restored to the consistent state in the previously completed checkpoint. On the epoch boundary, all worker threads are blocked
until the checkpointing is completed. A seperate checkpointing thread then 